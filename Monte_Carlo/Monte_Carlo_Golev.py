"""
Студент 3 курса Физического факультета МГУ
Голев А.С. 335 группа
Зависимость намагниченности от температуры в модели Изинга на квадратной решетке. Метод Монте Карло, алгоритм метрополиса.
"""

from matplotlib import pyplot as plt
import numpy as np 

t=0
J=1
n=10 # решетка 10*10
A = np.zeros((n,n),dtype=int)
M = []
f = []
for T in np.linspace(0.1,5,50): # изменение температуры от 0 до 5
    beta = 1/T
     #Формируем начальную конфигурацию.
    A[0::2,::]= 1 #np.array([1 if x>0.5 else -1 for x in np.random.rand(50)]).reshape((n//2,n))
    A[::,0::2]= 1 #np.array([1 if x>0.5 else -1 for x in np.random.rand(50)]).reshape((n,n//2))

    M.append(0)
    f.append(0)
    
    for it in range (1,100000):         #количество проверки случайных ячеек
        i=1
        j=1
        while (((i%2) != 0) or ((j%2) != 0)):         #задаем случайную ячейку
            i=np.random.randint(n)
            j=np.random.randint(n)
        E1 = 0                         
        
        #print(i,j, "A = ", A[i,j])
        #Вычисляем ∆Е, то есть изменение энергии системы, обусловленное произведенным пробным изменением конфигурации.

        if (j-1)>=0 :                   #левый 
            E1+=J*(A[i,j]*A[i,j-1])
        if (i+1)<=n-1 :                 #нижний
            E1+=J*(A[i,j]*A[i+1,j])
        if (j+1)<=n-1 :                 #верхний
            E1+=J*(A[i,j]*A[i,j+1])
        if (i-1)>=0 :                   #правый
            E1+=J*(A[i,j]*A[i-1,j])

        dE = 2*E1                       # так как изменения попарны

        # Если ∆Е меньше или равно нулю, то принимаем новую конфигурацию (в нашем случае переворачиваем спин)
        if dE < 0:
            A[i,j] = -1*A[i,j]
        
        # алгоритм Метрополиса
        # Если ∆Е положительно, вычисляем «вероятность перехода»:
        elif np.exp(-1*dE*beta)>np.random.rand():                       # Генерируем случайное число rnd в интервале (0, 1)
            A[i,j] *= -1*A[i,j]                                         # Если rnd≤W, то новую конфигурацию принимаем
        
        if(it>90000):
            M[t] += np.sum(A)/75                                        #намагниченность как сумма спинов/на количество ячеек

    # Вычисляем средние по конфигурациям, которые статистически независимы друг от друга.
    
    M[t] = M[t]/10000                  #намагниченность средняя за последние 10000 шагов
    f[t] = T
    t=t+1

plt.plot(f,M)
plt.title('Зависимость намагниченности от температуры')
plt.xlabel('T')
plt.ylabel('M')
plt.show()